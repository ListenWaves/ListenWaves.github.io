<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>ListenWaves_BLOG</title>
  
  <subtitle>一杯洗涤无余，万事消磨去远。浮名薄利休羡</subtitle>
  <link href="https://listenwaves.github.io/atom.xml" rel="self"/>
  
  <link href="https://listenwaves.github.io/"/>
  <updated>2024-06-18T09:00:02.330Z</updated>
  <id>https://listenwaves.github.io/</id>
  
  <author>
    <name>ListenWaves</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Web入门之HTML、CSS、JavaScript基础</title>
    <link href="https://listenwaves.github.io/2024/06/18/Web%E5%85%A5%E9%97%A8%E4%B9%8BHTML%E3%80%81CSS%E3%80%81JavaScript%E5%9F%BA%E7%A1%80/"/>
    <id>https://listenwaves.github.io/2024/06/18/Web%E5%85%A5%E9%97%A8%E4%B9%8BHTML%E3%80%81CSS%E3%80%81JavaScript%E5%9F%BA%E7%A1%80/</id>
    <published>2024-06-18T08:52:57.000Z</published>
    <updated>2024-06-18T09:00:02.330Z</updated>
    
    <content type="html"><![CDATA[<h1 id="HTML基础"><a href="#HTML基础" class="headerlink" title="HTML基础"></a>HTML基础</h1><h2 id="HTML到底是什么"><a href="#HTML到底是什么" class="headerlink" title="HTML到底是什么"></a>HTML到底是什么</h2><p>HTML（HyperText Markup Language，超文本标记语言）不是一门编程语言，而是一种用来结构化Web网页及其内容的标记语言。</p><p>HTML由一系列的<strong>元素</strong>组成。</p><h2 id="初识元素"><a href="#初识元素" class="headerlink" title="初识元素"></a>初识元素</h2><p>下面是一个<strong>段落元素</strong>，可在一行单独呈现。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>My cat is very grumpy<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这个元素的主要部分有：</p><ol><li><p><strong>开始标签</strong>（Opening tag）：包含元素名称（本例为 p），被大于号、小于号所包围。表示元素从这里开始或者开始起作用——在本例中即段落由此开始。</p></li><li><p><strong>结束标签</strong>（Closing tag）：与开始标签相似，只是其在元素名称之前包含了一个斜杠，表示着元素的结尾——在本例中即段落在此结束。</p></li><li><p><strong>内容</strong>（Content）：元素的内容，本例中就是所输入的文本本身（My cat is very grumpy）。</p></li><li><p><strong>元素</strong>（Element）：开始标签、结束标签与内容相结合，便是一个完整的元素。</p></li></ol><p>元素可以有属性（Attribute），例如：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;editor-note&quot;</span>&gt;</span>My cat is very grumpy<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p>属性包含了元素的一些额外信息，这些信息本身不应显现在内容中。本例中，<code>class</code>是属性名称，<code>editor-note</code>是属性的值。<code>class</code>属性可为元素提供一个标识名称，以便进一步为元素指定样式或进行其他操作时使用。</p><h3 id="嵌套元素"><a href="#嵌套元素" class="headerlink" title="嵌套元素"></a>嵌套元素</h3><p>可以将一个元素置于其他元素之中，称为<strong>嵌套</strong>。例如：将very用<code>strong</code>元素包围，very将突出显示。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>My cat is <span class="tag">&lt;<span class="name">strong</span>&gt;</span>very<span class="tag">&lt;/<span class="name">strong</span>&gt;</span> grumpy<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="空元素"><a href="#空元素" class="headerlink" title="空元素"></a>空元素</h3><p>不包含任何内容的元素称为空元素。比如<code>&lt;img&gt;</code>元素：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;images/firefox-icon.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;My test image&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><p>本元素包含两个属性，但是没有<code>&lt;/img&gt;</code>结束标签，元素里也没有内容。这是因为图像元素不需要通过内容来产生效果，它的作用是向其所在的位置嵌入一个图像。</p><p>在<code>&lt;img&gt;</code>元素中：</p><ul><li><p><code>src</code>属性是<strong>必须的</strong>，它包含了嵌入图片的路径。</p></li><li><p><code>alt</code>属性包含一条对图像的文本描述，屏幕阅读器可对视觉障碍使用者阅读描述，在由于某些原因无法加载图像时会显示<code>alt</code>属性中的备用文本。</p></li></ul><blockquote><p>文件路径的一些通用规则：假设在<code>test-site</code>文件夹内有以下四个文件或文件夹：<code>index.html</code>（主页内容）、<code>images</code><strong>文件夹</strong>（图片）、<code>styles</code><strong>文件夹</strong>（设置内容样式的CSS代码）、<code>scripts</code><strong>文件夹</strong>（用于向网站添加交互功能的JavaScript代码）。</p><ul><li><p>若引用文件与HTML文件同级，直接使用文件名：<code>my-image.jpg</code>。</p></li><li><p>若引用子目录里的文件，在路径前面加上目录名，再加上一个正斜杠。例如：<code>subdirectory/my-image.jpg</code>。</p></li><li><p>若引用文件位于HTML文件的<strong>上级</strong>，需要加上两个点。例如：若<code>index.html</code>在<code>test-site</code>的一个子文件夹内，而<code>my-image.jpg</code>在<code>test-site</code>内，可以使用<code>../my-image.jpg</code>在<code>index.html</code>中引用<code>my-image.jpg</code>。</p></li><li><p>以上方法可以随意组合。例如：<code>../subdirectory/another-subdirectory/my-image.jpg</code>。</p></li></ul></blockquote><h2 id="HTML文档详解"><a href="#HTML文档详解" class="headerlink" title="HTML文档详解"></a>HTML文档详解</h2><p>对这些单个元素彼此协同，可构成完整HTML页面，以下为<code>index.html</code>示例：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en-US&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>My test page<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;images/firefox-icon.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;My test image&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><code>&lt;!doctype html&gt;</code>——文档类型，这是必不可少的开头。当今作用有限，可以说仅用于保证文档正常读取。</li><li><code>&lt;html&gt;&lt;/html&gt;</code>——<code>&lt;html&gt;</code>元素。该元素包含整个页面的所有内容，有时候也称作根元素。 <code>lang</code> 属性写明了页面的主要语种。</li><li><code>&lt;head&gt;&lt;/head&gt;</code>——<code>&lt;head&gt;</code>元素。所有那些你加到页面中，且不向用户展示的页面内容，都以这个元素为容器。其中包含诸如提供给搜索引擎的关键字和页面描述、用于设置页面样式的 CSS、字符集声明等等。</li><li><code>&lt;meta charset=&quot;utf-8&quot;&gt;</code>——该元素指明你的文档使用 UTF-8 字符编码。</li><li><code>&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width&quot;&gt;</code>——视口元素可以确保页面以视口宽度进行渲染，避免移动端浏览器上因页面过宽导致缩放。</li><li><code>&lt;title&gt;&lt;/title&gt;</code>——<code>&lt;title&gt;</code>元素。该元素设置页面的标题，显示在浏览器标签页上，也作为收藏网页的描述文字。</li><li><code>&lt;body&gt;&lt;/body&gt;</code>——<code>&lt;body&gt;</code>元素。该元素包含期望让用户在访问页面时看到的全部内容，包括文本、图像、视频、游戏、可播放的音轨或其他内容。</li></ul><h2 id="更多元素"><a href="#更多元素" class="headerlink" title="更多元素"></a>更多元素</h2><h3 id="标题元素"><a href="#标题元素" class="headerlink" title="标题元素"></a>标题元素</h3><p>标题元素可用于指定内容的标题和子标题，HTML包括六个级别的标题，<code>&lt;h1&gt;</code>-<code>&lt;h6&gt;</code>。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>主标题<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>顶层标题<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>子标题<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h4</span>&gt;</span>次子标题<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="列表元素"><a href="#列表元素" class="headerlink" title="列表元素"></a>列表元素</h3><p>包括无序列表<code>&lt;ul&gt;</code>和有序列表<code>&lt;ol&gt;</code>，列表的每个项目用一个列表项目元素<code>&lt;li&gt;</code>包围。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>technologists<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>thinkers<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>builders<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="锚元素"><a href="#锚元素" class="headerlink" title="锚元素"></a>锚元素</h3><p>锚元素<code>&lt;a&gt;</code>可通过<code>href</code>属性添加超链接，可使用浏览器支持的任何URL协议。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>You can reach Michael at:<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://example.com&quot;</span>&gt;</span>Website<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;mailto:m.bluth@example.com&quot;</span>&gt;</span>Email<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;tel:+123456789&quot;</span>&gt;</span>Phone<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><p>使用 <code>tel:</code> URL 链接到一个电话号码，使用 <code>mailto:</code> URL 链接到一个邮箱地址。</p><h1 id="CSS基础"><a href="#CSS基础" class="headerlink" title="CSS基础"></a>CSS基础</h1><h2 id="什么是CSS"><a href="#什么是CSS" class="headerlink" title="什么是CSS"></a>什么是CSS</h2><p>CSS不是编程语言，也不是标记语言，是一门<strong>样式表</strong>语言。可用于为HTML元素添加样式，</p><p>例如：以下代码选择所有段落文字，并设置为红色。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">p</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>将上述CSS代码保存在<code>style.css</code>文件里并放在<code>styles</code>文件夹下。</p><p>打开<code>index.html</code>文件，在文档头部即<code>&lt;head&gt;</code>与<code>&lt;/head&gt;</code>之间插入以下代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;styles/style.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><p>保存 <code>index.html</code> 并用浏览器将其打开可以看到效果。</p><h2 id="CSS规则集"><a href="#CSS规则集" class="headerlink" title="CSS规则集"></a>CSS规则集</h2><p>CSS的整个结构称为规则集，包含以下几个部分：</p><ul><li><p>选择器（Selector）：选择一个或多个需要添加样式的元素，本例中为<code>&lt;p&gt;</code>元素。</p></li><li><p>声明（Declaration）：一个单独的规则，本例中为<code>color: red</code>。其中<code>color</code>为<strong>属性</strong>，<code>red</code>为<strong>属性的值</strong>。</p></li></ul><p>如果需要同时修改多个属性，只需将它们用分号隔开，如：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">p</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: red;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">500px</span>;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid black;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果需要选择多种元素添加相同的样式，只需将不同的选择器用逗号分开，如：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">p</span>,</span><br><span class="line"><span class="selector-tag">li</span>,</span><br><span class="line"><span class="selector-tag">h1</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>选择器有许多不同的类型，常用选择器类型如下：</p><table><thead><tr><th>选择器名称</th><th>选择的内容</th><th>示例</th></tr></thead><tbody><tr><td>元素选择器（也称作标签或类型选择器）</td><td>所有指定类型的 HTML 元素</td><td><code>p</code><br>选择 <code>&lt;p&gt;</code></td></tr><tr><td>ID 选择器</td><td>具有特定 ID 的元素。单一 HTML 页面中，每个 ID 只对应一个元素，一个元素只对应一个 ID</td><td><code>#my-id</code><br>选择 <code>&lt;p id=&quot;my-id&quot;&gt;</code> 或 <code>&lt;a id=&quot;my-id&quot;&gt;</code></td></tr><tr><td>类选择器</td><td>具有特定类的元素。单一页面中，一个类可以有多个实例</td><td><code>.my-class</code><br>选择 <code>&lt;p class=&quot;my-class&quot;&gt;</code> 和 <code>&lt;a class=&quot;my-class&quot;&gt;</code></td></tr><tr><td>属性选择器</td><td>拥有特定属性的元素</td><td><code>img[src]</code><br>选择 <code>&lt;img src=&quot;myimage.png&quot;&gt;</code> 但不是 <code>&lt;img&gt;</code></td></tr><tr><td>伪类选择器</td><td>特定状态下的特定元素（比如鼠标指针悬停于链接之上）</td><td><code>a:hover</code><br>选择仅在鼠标指针悬停在链接上时的 <code>&lt;a&gt;</code> 元素</td></tr></tbody></table><h2 id="CSS样式示例"><a href="#CSS样式示例" class="headerlink" title="CSS样式示例"></a>CSS样式示例</h2><p>可在<code>index.html</code>文档头部添加以下<code>&lt;link&gt;</code>元素：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;https://fonts.googleapis.com/css?family=Open+Sans&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><p>这段代码将样式链接到一个样式表，该样式表将Open Sans字体家族与你的网页一起加载。</p><p><code>style.css</code>示例：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">html</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">10px</span>;<span class="comment">/*字号设置为10像素*/</span></span><br><span class="line">    <span class="attribute">font-family</span>: <span class="string">&quot;Open Sans&quot;</span>, sans-serif;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">h1</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">60px</span>;</span><br><span class="line">    <span class="attribute">text-align</span>: center</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">p</span>,</span><br><span class="line"><span class="selector-tag">li</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">16px</span>;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">2</span>;</span><br><span class="line">    <span class="attribute">letter-spacing</span>: <span class="number">1px</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*页面颜色*/</span></span><br><span class="line"><span class="selector-tag">html</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#00539f</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">600px</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> auto;<span class="comment">/*外边距，第一个值影响上下方向，第二个值影响左右方向,auto表示平均*/</span></span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#ff9500</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">20px</span> <span class="number">20px</span> <span class="number">20px</span>;<span class="comment">/*内边距，上右下左*/</span></span><br><span class="line">    <span class="attribute">border</span>: <span class="number">5px</span> solid black;<span class="comment">/*边框*/</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">h1</span> &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">20px</span> <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#00539f</span>;</span><br><span class="line">    <span class="attribute">text-shadow</span>: <span class="number">3px</span> <span class="number">3px</span> <span class="number">1px</span> black;<span class="comment">/*四个值依次为阴影与文本的水平偏移量、垂直偏移量、阴影的模糊半径、阴影的基色*/</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">img</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: block;<span class="comment">/*图片为行级元素，为了使图像有外边距，给予其块级行为*/</span></span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="JavaScript基础"><a href="#JavaScript基础" class="headerlink" title="JavaScript基础"></a>JavaScript基础</h1><h2 id="Javascript到底是什么"><a href="#Javascript到底是什么" class="headerlink" title="Javascript到底是什么"></a>Javascript到底是什么</h2><p>JavaScript（JS）是一门完备的动态编程语言，当应用于HTML文档时，可为网站提供动态交互特性。JS应用广泛，简单到幻灯片、照片库、浮动布局和响应按钮点击，复杂到游戏、2D&#x2F;3D 动画、大型数据库驱动程序等等。</p><h2 id="从”Hello-World-”开始"><a href="#从”Hello-World-”开始" class="headerlink" title="从”Hello World!”开始"></a>从”Hello World!”开始</h2><p>首先，在<code>scripts</code>文件夹下创建名为<code>main.js</code>的文件，并在<code>index.html</code>文件的<code>&lt;/body&gt;</code>标签前的新行添加以下代码</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;scripts/main.js&quot;</span> <span class="attr">defer</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>与CSS的<code>&lt;link&gt;</code>元素类似，它将JavaScript引入页面以作用于HTML。</p><p>现在将以下代码添加到<code>main.js</code>文件中：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> myHeading=<span class="variable language_">document</span>.<span class="title function_">querySeletor</span>(<span class="string">&quot;h1&quot;</span>);</span><br><span class="line">myHeading.<span class="property">textContent</span> = <span class="string">&quot;Hello world!&quot;</span>;</span><br></pre></td></tr></table></figure><blockquote><p>我们将 <code>&lt;script&gt;</code> HTML 文件的底部附近的原因是浏览器会按照代码在文件中的顺序加载 HTML。如果先加载的 JavaScript 期望修改其下方的 HTML，那么它可能由于 HTML 尚未被加载而失效。</p></blockquote><p>JS把页面的标题改成了”Hello world!”。首先用<code>querySeletor()</code>函数返回文档中与指定选择器或选择器组匹配的第一个 <code>Element</code>对象，并把它储存在<code>myHeading</code>变量中，之后，把<code>myHeading</code>变量的属性<code>textContent</code>（标题内容）修改为”Hello world!”。</p><h2 id="JavaScript快速入门"><a href="#JavaScript快速入门" class="headerlink" title="JavaScript快速入门"></a>JavaScript快速入门</h2><h3 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h3><p>变量是存储值的容器。要声明一个变量，先输入关键字<code>let</code>或<code>var</code>，然后输入合适的名称。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> myVariable;</span><br></pre></td></tr></table></figure><blockquote><p>注意：语句以分号结尾，JS对大小写敏感，最好使用<code>let</code>。</p></blockquote><p>变量定义后可以进行赋值：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">myVariable = <span class="string">&quot;李雷&quot;</span>;</span><br></pre></td></tr></table></figure><p>也可以将定义、赋值操作写在同一行：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> myVariable = <span class="string">&quot;李雷&quot;</span>;</span><br></pre></td></tr></table></figure><p>可以直接通过变量名取得变量的值：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">myVariable;</span><br></pre></td></tr></table></figure><p>变量在赋值后是可以更改的：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> myVariable = <span class="string">&#x27;李雷&#x27;</span>;</span><br><span class="line">myVariable = <span class="string">&#x27;张明&#x27;</span>;</span><br></pre></td></tr></table></figure><p>变量有不同的数据类型：</p><table><thead><tr><th>变量</th><th>解释</th><th>示例</th></tr></thead><tbody><tr><td>String</td><td>字符串（一串文本）：字符串的值必须用引号（单双均可，必须成对）括起来。</td><td><code>let myVariable = &#39;李雷&#39;;</code></td></tr><tr><td>Number</td><td>数字：无需引号。</td><td><code>let myVariable = 10;</code></td></tr><tr><td>Boolean</td><td>布尔值（真 &#x2F; 假）： <code>true</code>&#x2F;<code>false</code> 是 JS 里的特殊关键字，无需引号。</td><td><code>let myVariable = true;</code></td></tr><tr><td>Array</td><td>数组：用于在单一引用中存储多个值的结构。</td><td><code>let myVariable = [1, &#39;李雷&#39;, &#39;韩梅梅&#39;, 10];</code><br>元素引用方法：<code>myVariable[0]</code>, <code>myVariable[1]</code> ……</td></tr><tr><td>Object</td><td>对象：JavaScript 里一切皆对象，一切皆可储存在变量里。这一点要牢记于心。</td><td><code>let myVariable = document.querySelector(&#39;h1&#39;);</code><br>以及上面所有示例都是对象。</td></tr></tbody></table><h3 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h3><table><thead><tr><th>运算符</th><th>解释</th><th>符号</th><th>示例</th></tr></thead><tbody><tr><td>加</td><td>将两个数字相加，或拼接两个字符串。</td><td><code>+</code></td><td><code>6 + 9;</code><br><code>&quot;Hello &quot; + &quot;world!&quot;;</code></td></tr><tr><td>减、乘、除</td><td>这些运算符操作与基础算术一致。只是乘法写作星号，除法写作斜杠。</td><td><code>-</code>, <code>*</code>, <code>/</code></td><td><code>9 - 3;</code><br><code>8 * 2; //乘法在 JS 中是一个星号</code><br><code>9 / 3;</code></td></tr><tr><td>赋值运算符</td><td>为变量赋值（你之前已经见过这个符号了）</td><td><code>=</code></td><td><code>let myVariable = &#39;李雷&#39;;</code></td></tr><tr><td>等于</td><td>测试两个值是否相等，并返回一个 <code>true</code>&#x2F;<code>false</code> （布尔）值。</td><td><code>===</code></td><td><code>let myVariable = 3;</code><br><code>myVariable === 4; // false</code></td></tr><tr><td>不等于</td><td>和等于运算符相反，测试两个值是否不相等，并返回一个 <code>true</code>&#x2F;<code>false</code> （布尔）值。</td><td><code>!==</code></td><td><code>let myVariable = 3;</code><br><code>myVariable !== 3; // false</code></td></tr><tr><td>取非</td><td>返回逻辑相反的值，比如当前值为真，则返回 <code>false</code>。</td><td><code>!</code></td><td>原式为真，但经取非后值为 <code>false</code>：<br><code>let myVariable = 3;</code><br><code>!(myVariable === 3); // false</code></td></tr></tbody></table><h3 id="条件语句"><a href="#条件语句" class="headerlink" title="条件语句"></a>条件语句</h3><p><code>if...else</code>结构</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> iceCream = <span class="string">&quot;chocolate&quot;</span>;</span><br><span class="line"><span class="keyword">if</span> (iceCream === <span class="string">&quot;chocolate&quot;</span>)&#123;</span><br><span class="line">    <span class="title function_">alert</span>(<span class="string">&quot;我最喜欢巧克力冰淇淋了。&quot;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_">alert</span>(<span class="string">&quot;但是巧克力才是我的最爱呀。&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h3><p>函数用来封装可复用的功能。已经涉及过一些函数：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> myVariable = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;h1&quot;</span>);</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">alert</span>(<span class="string">&quot;hello!&quot;</span>);</span><br></pre></td></tr></table></figure><p><code>document.querySelector</code> 和 <code>alert</code> 是浏览器内置的函数，随时可用。<code>alert()</code> 函数在浏览器窗口内弹出一个警告框，警告框里显示相应电内容。</p><p>我们能够定义自己的函数，例如乘法函数：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">multiply</span>(<span class="params">num1, num2</span>)&#123;</span><br><span class="line">    <span class="keyword">let</span> result = num1 * num2;</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在控制台运行</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">multiply</span>(<span class="number">4</span>, <span class="number">7</span>);</span><br></pre></td></tr></table></figure><h3 id="事件"><a href="#事件" class="headerlink" title="事件"></a>事件</h3><p>事件能为网页添加真真实的交互能力。它可以捕捉浏览器操作并运行一些代码做为响应。最简单的事件是点击事件，鼠标的点击操作会触发该事件。可尝试将下面的代码输入到控制台，然后点击页面的任意位置：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;html&quot;</span>).<span class="title function_">addEventListener</span>(<span class="string">&quot;click&quot;</span>, <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="title function_">alert</span>(<span class="string">&quot;别戳我，我怕疼。&quot;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>将事件与元素绑定有许多方法。在这里选用了 <code>&lt;html&gt;</code>元素，然后调用了它的 <code>addEventListener()</code>方法，将事件名称（<code>&#39;click&#39;</code>）以及其回调函数（当事件发生时，调用该函数）传入该函数中作为调用参数。</p><p>刚刚我们传递给 <code>addEventListener()</code> 的函数被称为匿名函数，因为它没有名字。匿名函数还有另一种箭头函数的写法，箭头函数使用 <code>() =&gt;</code> 代替 <code>function ()</code>：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;html&quot;</span>).<span class="title function_">addEventListener</span>(<span class="string">&quot;click&quot;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="title function_">alert</span>(<span class="string">&quot;别戳我，我怕疼。&quot;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="完善示例网页"><a href="#完善示例网页" class="headerlink" title="完善示例网页"></a>完善示例网页</h2><h3 id="点击切换图片"><a href="#点击切换图片" class="headerlink" title="点击切换图片"></a>点击切换图片</h3><p><code>main.js</code>代码如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> myImage = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;img&quot;</span>);</span><br><span class="line"></span><br><span class="line">myImage.<span class="property">onclick</span> = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="keyword">let</span> mySrc = myImage.<span class="title function_">getAttribute</span>(<span class="string">&quot;src&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (mySrc === <span class="string">&quot;images/Edge.png&quot;</span>)&#123;</span><br><span class="line">        myImage.<span class="title function_">setAttribute</span>(<span class="string">&quot;src&quot;</span>, <span class="string">&quot;images/chrome.png&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        myImage.<span class="title function_">setAttribute</span>(<span class="string">&quot;src&quot;</span>, <span class="string">&quot;images/Edge.png&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="添加个性化欢迎信息"><a href="#添加个性化欢迎信息" class="headerlink" title="添加个性化欢迎信息"></a>添加个性化欢迎信息</h3><p>首先在<code>index.html</code>的<code>&lt;script&gt;</code>标签前添加以下代码，在页面底部显示一个按钮</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span>&gt;</span>切换用户<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><p>继续添加<code>main.js</code>代码如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获取按钮与标题</span></span><br><span class="line"><span class="keyword">let</span> myButton = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;button&quot;</span>);</span><br><span class="line"><span class="keyword">let</span> myHeading = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;h1&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//个性化欢迎信息设置，不输入或取消时反复执行setUserName</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">setUserName</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="keyword">let</span> myName = <span class="title function_">prompt</span>(<span class="string">&quot;请输入你的名字&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (!myName)&#123;</span><br><span class="line">        <span class="title function_">setUserName</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="variable language_">localStorage</span>.<span class="title function_">setItem</span>(<span class="string">&quot;name&quot;</span>, myName);</span><br><span class="line">        myHeading.<span class="property">textContent</span> = <span class="string">&quot;Mozilla 酷毙了，&quot;</span> + myName;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//首次打开网页时初始化，之后会调用浏览器存储值</span></span><br><span class="line"><span class="keyword">if</span> (!<span class="variable language_">localStorage</span>.<span class="title function_">getItem</span>(<span class="string">&quot;name&quot;</span>))&#123;</span><br><span class="line">    <span class="title function_">setUserName</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">let</span> storedName = <span class="variable language_">localStorage</span>.<span class="title function_">getItem</span>(<span class="string">&quot;name&quot;</span>);</span><br><span class="line">    myHeading.<span class="property">textContent</span> = <span class="string">&quot;Mozilla 酷毙了，&quot;</span> + storedName;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//点击按钮设置新用户</span></span><br><span class="line">myButton.<span class="property">onclick</span> = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="title function_">setUserName</span>();</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;HTML基础&quot;&gt;&lt;a href=&quot;#HTML基础&quot; class=&quot;headerlink&quot; title=&quot;HTML基础&quot;&gt;&lt;/a&gt;HTML基础&lt;/h1&gt;&lt;h2 id=&quot;HTML到底是什么&quot;&gt;&lt;a href=&quot;#HTML到底是什么&quot; class=&quot;headerlink</summary>
      
    
    
    
    <category term="Web开发" scheme="https://listenwaves.github.io/categories/Web%E5%BC%80%E5%8F%91/"/>
    
    
    <category term="HTML" scheme="https://listenwaves.github.io/tags/HTML/"/>
    
    <category term="CSS" scheme="https://listenwaves.github.io/tags/CSS/"/>
    
    <category term="JavaScript" scheme="https://listenwaves.github.io/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>两种新型互补自偏置差分放大器介绍</title>
    <link href="https://listenwaves.github.io/2024/06/12/%E4%B8%A4%E7%A7%8D%E6%96%B0%E5%9E%8B%E4%BA%92%E8%A1%A5%E8%87%AA%E5%81%8F%E7%BD%AE%E5%B7%AE%E5%88%86%E6%94%BE%E5%A4%A7%E5%99%A8%E4%BB%8B%E7%BB%8D/"/>
    <id>https://listenwaves.github.io/2024/06/12/%E4%B8%A4%E7%A7%8D%E6%96%B0%E5%9E%8B%E4%BA%92%E8%A1%A5%E8%87%AA%E5%81%8F%E7%BD%AE%E5%B7%AE%E5%88%86%E6%94%BE%E5%A4%A7%E5%99%A8%E4%BB%8B%E7%BB%8D/</id>
    <published>2024-06-12T09:26:29.000Z</published>
    <updated>2024-06-12T09:43:04.840Z</updated>
    
    <content type="html"><![CDATA[<h1 id="完全互补自偏置CMOS差分放大器"><a href="#完全互补自偏置CMOS差分放大器" class="headerlink" title="完全互补自偏置CMOS差分放大器"></a>完全互补自偏置CMOS差分放大器</h1><blockquote><p>Ref：<a href="https://ieeexplore.ieee.org/document/68134">Bazes M. Two novel fully complementary self-biased CMOS differential amplifiers[J]. IEEE Journal of Solid-State Circuits, 1991, 26(2): 165-168.</a></p></blockquote><h2 id="CSDA"><a href="#CSDA" class="headerlink" title="CSDA"></a>CSDA</h2><p><strong>CSDA</strong> (<code>complementary self-biased differential amplifier</code>)互补自偏置差分放大器</p><p>该电路结构演化过程如下图所示：</p><p><img src="https://s2.loli.net/2024/06/12/spNcm9fUikbH8BI.png"></p><p>首先，图(a)PMOS输入与NMOS输入的经典五管OTA结构去除电流镜负载后，可得到图(b)所示的结构，该结构的两外部偏置信号无法提供完全相等的电流，去除外部偏置后最终得到图(c)所示的CSDA结构。</p><p>提供尾电流的M3、M4需工作于线性区，以提高输出电压摆幅。</p><p>CSDA相对于经典五管OTA结构差模增益变为2倍(+6dB)。</p><p>CSDA由于能够提高大的输出开关电流，因此适用于高速比较器应用。</p><h2 id="VCDA"><a href="#VCDA" class="headerlink" title="VCDA"></a>VCDA</h2><p><strong>VCDA</strong> (<code>very-wide-common-mode-range differential amplifier</code>)宽共模输入范围差分放大器</p><p><img src="https://s2.loli.net/2024/06/12/zw6S72t5RmXEjr4.png"></p><p>该电路结构演化过程类似：去除负载，去除外部偏置</p><p>差模增益也为OTA的2倍</p><h1 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h1><p>CSDA与VCDA均是n-p互补的，并且通过负反馈提供自偏置，因此性能上有所提升：</p><p>1）有源区偏置对PVT变化的敏感性较低</p><p>2）能够提供比静态偏置电流大得多的开关电流</p><p>3）差模增益加倍(+6dB)</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;完全互补自偏置CMOS差分放大器&quot;&gt;&lt;a href=&quot;#完全互补自偏置CMOS差分放大器&quot; class=&quot;headerlink&quot; title=&quot;完全互补自偏置CMOS差分放大器&quot;&gt;&lt;/a&gt;完全互补自偏置CMOS差分放大器&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;R</summary>
      
    
    
    
    <category term="文献阅读" scheme="https://listenwaves.github.io/categories/%E6%96%87%E7%8C%AE%E9%98%85%E8%AF%BB/"/>
    
    
    <category term="比较器" scheme="https://listenwaves.github.io/tags/%E6%AF%94%E8%BE%83%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>安装hexo-tag-aplayer后导航栏不显示的问题解决</title>
    <link href="https://listenwaves.github.io/2024/06/06/%E5%AE%89%E8%A3%85hexo-tag-aplayer%E5%90%8E%E5%AF%BC%E8%88%AA%E6%A0%8F%E4%B8%8D%E6%98%BE%E7%A4%BA%E7%9A%84%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/"/>
    <id>https://listenwaves.github.io/2024/06/06/%E5%AE%89%E8%A3%85hexo-tag-aplayer%E5%90%8E%E5%AF%BC%E8%88%AA%E6%A0%8F%E4%B8%8D%E6%98%BE%E7%A4%BA%E7%9A%84%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/</id>
    <published>2024-06-06T08:36:38.000Z</published>
    <updated>2024-06-07T01:34:38.920Z</updated>
    
    <content type="html"><![CDATA[<h1 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h1><p>使用 <code>hexo-tag-aplayer</code>插件后，博客最上方的导航栏在点击一次后会消失不见</p><p><img src="https://s2.loli.net/2024/06/06/duFB3DTbvyHRhXG.png"></p><p>F5页面刷新后导航栏能正常显示，但再次点击任一按钮后导航栏又消失不见。</p><p><img src="https://s2.loli.net/2024/06/06/5X8oinLNq7Q4Yyj.png"></p><p>查看控制台发现如下错误：</p><p><code>RangeError:Maximum call stack size exceeded at loadMeting</code>栈溢出</p><h1 id="问题解决"><a href="#问题解决" class="headerlink" title="问题解决"></a>问题解决</h1><p>询问butterfly主题开发者 <strong>jerryc127</strong> 得到如下解决方案</p><p>修改主题 <code>themes\butterfly\layout\includes\third-party\aplayer.pug</code>文件如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">link(rel=&#x27;stylesheet&#x27; href=url_for(theme.asset.aplayer_css) media=&quot;print&quot; onload=&quot;this.media=&#x27;all&#x27;&quot;)</span><br><span class="line">script(src=url_for(theme.asset.aplayer_js))</span><br><span class="line">script(src=url_for(theme.asset.meting_js))</span><br><span class="line">if theme.pjax.enable</span><br><span class="line">  script.</span><br><span class="line">    (() =&gt; &#123;</span><br><span class="line">      const destroyAplayer = () =&gt; &#123;</span><br><span class="line">        if (window.aplayers) &#123;</span><br><span class="line">          for (let i = 0; i &lt; window.aplayers.length; i++) &#123;</span><br><span class="line">            if (!window.aplayers[i].options.fixed) &#123;</span><br><span class="line">              window.aplayers[i].destroy()</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      const runLoadMeting = () =&gt; &#123;</span><br><span class="line">        typeof loadMeting === &#x27;function&#x27; &amp;&amp; document.getElementsByClassName(&#x27;aplayer&#x27;).length &amp;&amp; loadMeting()</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      btf.addGlobalFn(&#x27;pjaxSend&#x27;, destroyAplayer, &#x27;destroyAplayer&#x27;)</span><br><span class="line">      btf.addGlobalFn(&#x27;pjaxComplete&#x27;, loadMeting, &#x27;runLoadMeting&#x27;)</span><br><span class="line">    &#125;)()</span><br></pre></td></tr></table></figure><p>问题解决。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h1&gt;&lt;p&gt;使用 &lt;code&gt;hexo-tag-aplayer&lt;/code&gt;插件后，博客最上方的导航栏在点击一次后会消失不见&lt;/p&gt;
&lt;</summary>
      
    
    
    
    <category term="博客搭建" scheme="https://listenwaves.github.io/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    
    <category term="butterfly" scheme="https://listenwaves.github.io/tags/butterfly/"/>
    
  </entry>
  
  <entry>
    <title>解决图片无法在博客显示的问题</title>
    <link href="https://listenwaves.github.io/2024/06/04/%E8%A7%A3%E5%86%B3%E5%9B%BE%E7%89%87%E6%97%A0%E6%B3%95%E5%9C%A8%E5%8D%9A%E5%AE%A2%E6%98%BE%E7%A4%BA%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <id>https://listenwaves.github.io/2024/06/04/%E8%A7%A3%E5%86%B3%E5%9B%BE%E7%89%87%E6%97%A0%E6%B3%95%E5%9C%A8%E5%8D%9A%E5%AE%A2%E6%98%BE%E7%A4%BA%E7%9A%84%E9%97%AE%E9%A2%98/</id>
    <published>2024-06-04T02:19:49.000Z</published>
    <updated>2024-06-18T09:07:16.095Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题来源"><a href="#问题来源" class="headerlink" title="问题来源"></a>问题来源</h2><p>在参考 <a href="https://hexo.io/">Hexo</a> 与 <a href="https://butterfly.js.org/">butterfly</a> 配置文档后，初步成功搭建了博客网站并部署到 Github 上，但 <a href="https://sm.ms/">SM.MS</a> 图床上的图片无法加载。</p><p>检查图片链接能正常访问，但 F12 查看网页源代码，发现无挂载图片资源，尝试诸多方法最终解决该问题。</p><h2 id="可能原因"><a href="#可能原因" class="headerlink" title="可能原因"></a>可能原因</h2><h3 id="防盗链"><a href="#防盗链" class="headerlink" title="防盗链"></a>防盗链</h3><p>图床可能开启了防盗链机制，对<code>\themes\butterfly\layout\includes1</code>目录下的<code>head.pug</code>文件修改其 meta 信息，使所有页面带有该 head 。</p><p>在<code>head.pug</code>文件中添加以下内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">meta(name=&quot;referrer&quot; content=&quot;no-referrer&quot;)</span><br></pre></td></tr></table></figure><p>并未解决问题。</p><h3 id="Github分支"><a href="#Github分支" class="headerlink" title="Github分支"></a>Github分支</h3><p>目前 Github 的默认分支为 main，而 hexo 配置文件<code>_config.yml</code>中 branch 填写为 master ，因此将 Github 默认分支更改为 master ，并且删除该仓库下的 main 分支（否则 active 分支仍为 main ），重新部署。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$</span> hexo clean</span><br><span class="line"><span class="variable">$</span> hexo generate</span><br><span class="line"><span class="variable">$</span> hexo deploy</span><br></pre></td></tr></table></figure><p>最终解决问题。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;问题来源&quot;&gt;&lt;a href=&quot;#问题来源&quot; class=&quot;headerlink&quot; title=&quot;问题来源&quot;&gt;&lt;/a&gt;问题来源&lt;/h2&gt;&lt;p&gt;在参考 &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt; 与 &lt;a href=&quot;https://but</summary>
      
    
    
    
    <category term="博客搭建" scheme="https://listenwaves.github.io/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    
    <category term="hexo" scheme="https://listenwaves.github.io/tags/hexo/"/>
    
  </entry>
  
</feed>
